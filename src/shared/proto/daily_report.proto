syntax = "proto3";

package dailyreport.v1;

message DailyReport {
  string id = 1;
  string user_id = 2;
  int64 report_date = 3;
  optional string memo = 4;
  optional string tomorrow_plan = 5;
  repeated WorkRecord work_records = 6;
  repeated Comment comments = 7;
  int64 created_at = 8;
  int64 updated_at = 9;
}

message WorkRecord {
  string id = 1;
  string daily_report_id = 2;
  string project_id = 3;
  double work_hours = 4;
  string work_content = 5;
  int64 created_at = 6;
}

message Comment {
  string id = 1;
  string daily_report_id = 2;
  string user_id = 3;
  string content = 4;
  int64 created_at = 5;
  int64 updated_at = 6;
}

message CreateDailyReportRequest {
  string user_id = 1;
  int64 report_date = 2;
  optional string memo = 3;
  optional string tomorrow_plan = 4;
  repeated CreateWorkRecordInput work_records = 5;
}

message CreateWorkRecordInput {
  string project_id = 1;
  double work_hours = 2;
  string work_content = 3;
}

message CreateDailyReportResponse {
  DailyReport daily_report = 1;
}

message GetDailyReportRequest {
  string id = 1;
}

message GetDailyReportResponse {
  DailyReport daily_report = 1;
}

message GetDailyReportByDateRequest {
  string user_id = 1;
  int64 report_date = 2;
}

message GetDailyReportByDateResponse {
  DailyReport daily_report = 1;
}

message UpdateDailyReportRequest {
  string id = 1;
  optional string memo = 2;
  optional string tomorrow_plan = 3;
  repeated CreateWorkRecordInput work_records = 4;
}

message UpdateDailyReportResponse {
  DailyReport daily_report = 1;
}

message ListDailyReportsRequest {
  optional string user_id = 1;
  optional int64 start_date = 2;
  optional int64 end_date = 3;
  int32 limit = 4;
  int32 offset = 5;
}

message ListDailyReportsResponse {
  repeated DailyReport daily_reports = 1;
  int32 total = 2;
}

message AddCommentRequest {
  string daily_report_id = 1;
  string user_id = 2;
  string content = 3;
}

message AddCommentResponse {
  Comment comment = 1;
}

service DailyReportService {
  rpc CreateDailyReport(CreateDailyReportRequest) returns (CreateDailyReportResponse);
  rpc GetDailyReport(GetDailyReportRequest) returns (GetDailyReportResponse);
  rpc GetDailyReportByDate(GetDailyReportByDateRequest) returns (GetDailyReportByDateResponse);
  rpc UpdateDailyReport(UpdateDailyReportRequest) returns (UpdateDailyReportResponse);
  rpc ListDailyReports(ListDailyReportsRequest) returns (ListDailyReportsResponse);
  rpc AddComment(AddCommentRequest) returns (AddCommentResponse);
}